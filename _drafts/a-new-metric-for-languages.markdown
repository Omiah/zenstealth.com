I'm going to make a wild and zany assumption here: all programming languages are the same.

Cool. Now you neatly-organized Java guys are irritated at being clumped in with you free-balling Rubyists, the C guys are furiously arguing performance relative to Python, still no one cares about poor Haskell, and everyone is ticked off about being compared to PHP. Yes, I get it: people pick their languages according to taste. Taste of syntax, taste of performance, taste of structure, and just overall productivity and happiness in their languages of choice. Cool.

With that said, for the sake of this post, I'm going to argue they're all about the same. A competent Java guy is going to write as effective as a competent Objective C guy. Compare that to a secretarial position, where tool choice does matter: a secretary will be orders of magnitude more efficient if he types with a computer rather than a typewriter. There are edge cases, of course: Google won't power their main search with Ruby any time soon, and banking software might not want to run on sqlite, but again, let's talk more about the general-purpose programming market.

I've been thinking about this assumption for a little bit, and if you agree that language choice isn't going to make or break you on the order of magnitude level, what might impact developer productivity at that level?